{
  message: 'Starting Java server with: /usr/lib/jvm/default/bin/java --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -jar /home/fahrul/.vscode/extensions/redhat.java-0.63.0/server/plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar -configuration /home/fahrul/.config/Code/User/globalStorage/redhat.java/0.63.0/config_ss_linux -data /home/fahrul/.config/Code/User/workspaceStorage/e780e7ed6882cc665977011bf5162d3f/redhat.java/ss_ws',
  level: 'info',
  timestamp: '2020-07-02 09:32:53.650'
}
{
  message: 'Starting Java server with: /usr/lib/jvm/default/bin/java --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -jar /home/fahrul/.vscode/extensions/redhat.java-0.63.0/server/plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar -configuration /home/fahrul/.config/Code/User/globalStorage/redhat.java/0.63.0/config_linux -data /home/fahrul/.config/Code/User/workspaceStorage/e780e7ed6882cc665977011bf5162d3f/redhat.java/jdt_ws',
  level: 'info',
  timestamp: '2020-07-02 09:32:53.710'
}
{
  message: '[Error - 9:33:03 AM] Jul 2, 2020, 9:33:03 AM Failed to build workspace.\n' +
    'jdt.ls-java-project does not exist\n' +
    'Java Model Exception: Java Model Status [jdt.ls-java-project does not exist]\n' +
    '\tat org.eclipse.jdt.internal.core.JavaElement.newJavaModelException(JavaElement.java:583)\n' +
    '\tat org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:256)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:326)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:312)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaElement.getChildren(JavaElement.java:267)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoots(JavaProject.java:2322)\n' +
    '\tat org.eclipse.jdt.internal.core.JavaProject.getPackageFragments(JavaProject.java:2346)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.managers.ProjectsManager.cleanupResources(ProjectsManager.java:203)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BuildWorkspaceHandler.buildWorkspace(BuildWorkspaceHandler.java:53)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$26(JDTLanguageServer.java:791)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$50(JDTLanguageServer.java:957)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 09:33:04.044'
}
{
  message: "Failed to provide hover command Error: The request (id: 169, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 09:38:43.301'
}
{
  message: "Failed to provide hover command Error: The request (id: 1135, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 10:20:47.541'
}
{
  message: "Failed to provide hover command Error: The request (id: 1293, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 10:39:34.052'
}
{
  message: "Failed to provide hover command Error: The request (id: 1482, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 11:19:46.716'
}
{
  message: "Failed to provide hover command Error: The request (id: 2068, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 11:31:42.263'
}
{
  message: '[Error - 11:33:41 AM] Jul 2, 2020, 11:33:41 AM Unable to read documentation\n' +
    'null\n' +
    'java.util.concurrent.TimeoutException\n' +
    '\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n' +
    '\tat com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CompletionResolveHandler.resolve(CompletionResolveHandler.java:157)\n' +
    '\tat com.microsoft.jdtls.intellicode.core.CommandHandler.executeCommand(CommandHandler.java:70)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:215)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:205)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$3(JDTLanguageServer.java:476)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 11:33:41.820'
}
{
  message: '[Error - 11:37:30 AM] Jul 2, 2020, 11:37:30 AM Unable to read documentation\n' +
    'null\n' +
    'java.util.concurrent.TimeoutException\n' +
    '\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n' +
    '\tat com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CompletionResolveHandler.resolve(CompletionResolveHandler.java:157)\n' +
    '\tat com.microsoft.jdtls.intellicode.core.CommandHandler.executeCommand(CommandHandler.java:70)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:215)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:205)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$3(JDTLanguageServer.java:476)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 11:37:30.443'
}
{
  message: "Failed to provide hover command Error: The request (id: 3223, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 11:43:08.933'
}
{
  message: "Failed to provide hover command Error: The request (id: 3258, method: 'java/findLinks') has been cancelled",
  level: 'error',
  timestamp: '2020-07-02 11:43:18.533'
}
{
  message: '[Error - 11:43:58 AM] Jul 2, 2020, 11:43:58 AM Unable to read documentation\n' +
    'null\n' +
    'java.util.concurrent.TimeoutException\n' +
    '\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n' +
    '\tat com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CompletionResolveHandler.resolve(CompletionResolveHandler.java:157)\n' +
    '\tat com.microsoft.jdtls.intellicode.core.CommandHandler.executeCommand(CommandHandler.java:70)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:215)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:205)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$3(JDTLanguageServer.java:476)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 11:43:58.464'
}
{
  message: '[Error - 11:49:09 AM] Jul 2, 2020, 11:49:09 AM Unable to read documentation\n' +
    'null\n' +
    'java.util.concurrent.TimeoutException\n' +
    '\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n' +
    '\tat com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CompletionResolveHandler.resolve(CompletionResolveHandler.java:157)\n' +
    '\tat com.microsoft.jdtls.intellicode.core.CommandHandler.executeCommand(CommandHandler.java:70)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:215)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:205)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$3(JDTLanguageServer.java:476)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 11:49:09.480'
}
{
  message: '[Error - 11:49:19 AM] Jul 2, 2020, 11:49:19 AM Unable to read documentation\n' +
    'null\n' +
    'java.util.concurrent.TimeoutException\n' +
    '\tat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)\n' +
    '\tat com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CompletionResolveHandler.resolve(CompletionResolveHandler.java:157)\n' +
    '\tat com.microsoft.jdtls.intellicode.core.CommandHandler.executeCommand(CommandHandler.java:70)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:215)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:205)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$3(JDTLanguageServer.java:476)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 11:49:19.402'
}
{
  message: '[Error - 12:02:14 PM] Request textDocument/codeAction failed.',
  level: 'info',
  timestamp: '2020-07-02 12:02:14.498'
}
{
  message: '  Message: Internal error.\n' +
    '  Code: -32603 \n' +
    'java.util.concurrent.CompletionException: java.lang.NullPointerException\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:314)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:319)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:645)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n' +
    'Caused by: java.lang.NullPointerException\n' +
    '\tat org.eclipse.jdt.internal.corext.dom.ASTNodes.asString(ASTNodes.java:328)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.proposals.MissingReturnTypeCorrectionProposal.evaluateReturnExpressions(MissingReturnTypeCorrectionProposal.java:137)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.proposals.MissingReturnTypeCorrectionProposal.getRewrite(MissingReturnTypeCorrectionProposal.java:114)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.proposals.ASTRewriteCorrectionProposal.addEdits(ASTRewriteCorrectionProposal.java:89)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.proposals.CUCorrectionProposal.createTextChange(CUCorrectionProposal.java:109)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.proposals.CUCorrectionProposal.createChange(CUCorrectionProposal.java:115)\n' +
    '\tat org.eclipse.jdt.core.manipulation.ChangeCorrectionProposalCore.getChange(ChangeCorrectionProposalCore.java:150)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionFromProposal(CodeActionHandler.java:186)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:152)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\t... 6 more\n',
  level: 'info',
  timestamp: '2020-07-02 12:02:14.499'
}
{
  message: 'Starting Java server with: /usr/lib/jvm/default/bin/java --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -jar /home/fahrul/.vscode/extensions/redhat.java-0.63.0/server/plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar -configuration /home/fahrul/.config/Code/User/globalStorage/redhat.java/0.63.0/config_ss_linux -data /home/fahrul/.config/Code/User/workspaceStorage/e780e7ed6882cc665977011bf5162d3f/redhat.java/ss_ws',
  level: 'info',
  timestamp: '2020-07-02 12:17:39.059'
}
{
  message: 'Starting Java server with: /usr/lib/jvm/default/bin/java --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -jar /home/fahrul/.vscode/extensions/redhat.java-0.63.0/server/plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar -configuration /home/fahrul/.config/Code/User/globalStorage/redhat.java/0.63.0/config_linux -data /home/fahrul/.config/Code/User/workspaceStorage/e780e7ed6882cc665977011bf5162d3f/redhat.java/jdt_ws',
  level: 'info',
  timestamp: '2020-07-02 12:17:39.125'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '            (penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.099'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.104'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Error in JDT Core during AST creation\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.107'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '            (penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getASTRoot(InnovationContext.java:68)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getCoveringNode(InnovationContext.java:84)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.RefactorProcessor.getProposals(RefactorProcessor.java:127)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:128)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.122'
}
{
  message: '[Error - 12:20:42 PM] Request textDocument/codeAction failed.',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.128'
}
{
  message: '  Message: Internal error.\n' +
    '  Code: -32603 \n' +
    'java.util.concurrent.CompletionException: java.lang.IllegalArgumentException\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:314)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:319)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:645)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n' +
    'Caused by: java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getASTRoot(InnovationContext.java:68)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getCoveringNode(InnovationContext.java:84)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.RefactorProcessor.getProposals(RefactorProcessor.java:127)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:128)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\t... 6 more\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.128'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '            (penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:221)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.access$1(BaseDocumentLifeCycleHandler.java:203)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:100)\n' +
    '\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)\n' +
    '\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.470'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:221)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.access$1(BaseDocumentLifeCycleHandler.java:203)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:100)\n' +
    '\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)\n' +
    '\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.474'
}
{
  message: '[Error - 12:20:42 PM] Jul 2, 2020, 12:20:42 PM Error in JDT Core during AST creation\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:221)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.access$1(BaseDocumentLifeCycleHandler.java:203)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:100)\n' +
    '\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)\n' +
    '\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:42.477'
}
{
  message: '[Error - 12:20:44 PM] Jul 2, 2020, 12:20:44 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '        }(penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.077'
}
{
  message: '[Error - 12:20:44 PM] Jul 2, 2020, 12:20:44 PM Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.082'
}
{
  message: '[Error - 12:20:44 PM] Jul 2, 2020, 12:20:44 PM Error in JDT Core during AST creation\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:233)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:90)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.083'
}
{
  message: '[Error - 12:20:44 PM] Jul 2, 2020, 12:20:44 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '        }(penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getASTRoot(InnovationContext.java:68)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getCoveringNode(InnovationContext.java:84)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.RefactorProcessor.getProposals(RefactorProcessor.java:127)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:128)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.112'
}
{
  message: '[Error - 12:20:44 PM] Request textDocument/codeAction failed.',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.114'
}
{
  message: '  Message: Internal error.\n' +
    '  Code: -32603 \n' +
    'java.util.concurrent.CompletionException: java.lang.IllegalArgumentException\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:314)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:319)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:645)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598)\n' +
    '\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n' +
    'Caused by: java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getASTRoot(InnovationContext.java:68)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.InnovationContext.getCoveringNode(InnovationContext.java:84)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.corrections.RefactorProcessor.getProposals(RefactorProcessor.java:127)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:128)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$14(JDTLanguageServer.java:619)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:74)\n' +
    '\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:642)\n' +
    '\t... 6 more\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.114'
}
{
  message: '[Error - 12:20:44 PM] Jul 2, 2020, 12:20:44 PM Exception occurred during compilation unit conversion:\n' +
    '----------------------------------- SOURCE BEGIN -------------------------------------\n' +
    'import java.io.FileWriter;\n' +
    'import java.io.IOException;\n' +
    'import java.util.*;\n' +
    '\n' +
    'public class Atm extends Bank {\n' +
    '    static int batasPenarikan = 10000000;\n' +
    '    static int tes2=0;\n' +
    '    Random random = new Random();\n' +
    '    Scanner scan = new Scanner(System.in);\n' +
    '    public static void cek(int p){\n' +
    '        tes2+=p;\n' +
    '    }\n' +
    '    public void transaksi(int paramRekeningTujuan, int paramJumlah) {\n' +
    '        if(paramJumlah>saldo){\n' +
    '            System.out.println("Maaf, sisa saldo anda tidak mencukupi");\n' +
    '        }else{\n' +
    '            // boolean ulanglagi = true;\n' +
    '            int angka = random.nextInt(6);\n' +
    '            \n' +
    '                int validasi = faktorial(angka);\n' +
    '                System.out.println(angka+"!");\n' +
    '                System.out.print("Ketikkan hasil faktorial diatas sebagai bukti bahwa anda bukan robot : ");\n' +
    '                int hasil = scan.nextInt();\n' +
    '                if (hasil==validasi) {\n' +
    '                    \n' +
    '\n' +
    '                }else{\n' +
    '                    System.out.println("Error! Jawaban Anda salah");\n' +
    '                }    \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int faktorial(int n){\n' +
    '        if(n==0){\n' +
    '            return 1;\n' +
    '        }else{\n' +
    '            return n* faktorial(n-1);\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void mutasi() {\n' +
    '        System.out.println("===== Mutasi =====");\n' +
    '        if(mutasi.isEmpty()){\n' +
    '            System.out.println("Anda belum pernah melakukan transaksi");\n' +
    '        }else{\n' +
    '            System.out.println("Tanggal\\t\\t\\t\\t Jumlah Transaksi");\n' +
    '            for (int i = mutasi.size()-1; i >=0 ; i--) {\n' +
    '                System.out.print(tanggal.get(i)+"\\t");\n' +
    '                System.out.println("Rp"+mutasi.get(i));\n' +
    '            }\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void login(){\n' +
    '        boolean ulang = true;\n' +
    '        while(ulang){\n' +
    '            try {\n' +
    '                System.out.println("======= Bank PTI =======");\n' +
    '                System.out.print("Masukkan Nomer Kartu : ");\n' +
    '                int inputKartu = scan.nextInt();\n' +
    '                scan.nextLine();\n' +
    '            \n' +
    '                System.out.print("Masukkan PIN : ");\n' +
    '                int inputPIN = scan.nextInt();\n' +
    '                if (inputKartu != kartu) {\n' +
    '                    System.out.println("Nomer kartu salah");\n' +
    '               } else if(inputPIN != pin){\n' +
    '                   System.out.println("PIN salah");\n' +
    '               } else{\n' +
    '                   ulang = false;\n' +
    '               }\n' +
    '            } catch (InputMismatchException e) {\n' +
    '                System.out.println("Nomer Kartu dan PIN harus angka");\n' +
    '                System.exit(0);\n' +
    '            }       \n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public int tarik(){\n' +
    '        int i = 0;\n' +
    '        int penarikan;\n' +
    '\n' +
    '        do{\n' +
    '        System.out.print("Masukan nominal penarikan    : ");\n' +
    '        penarikan = scan.nextInt();\n' +
    '        cek(penarikan);\n' +
    '        \n' +
    '        if (){\n' +
    '        }(penarikan > saldo){\n' +
    '            System.out.println("Maaf, saldo Anda tidak mencukupi");\n' +
    '            System.out.println("silahkan masukan nominal yang lebih kecil");\n' +
    '        }else if (penarikan < 0){\n' +
    '            System.out.println("Maaf Anda tidak memasukkan nominal yang benar");\n' +
    '            System.out.println("Silahkan masukkan nominal yang benar");\n' +
    '            tarik();\n' +
    '        }\n' +
    '        else {\n' +
    '\n' +
    '            System.out.println("penarikan berhasil, sebanyak : " +penarikan);\n' +
    '            System.out.println("terima kasih^^, silahkan ambil uang anda ...");\n' +
    '            kurangiSaldo(penarikan);\n' +
    '        }\n' +
    '        i++;\n' +
    '        }\n' +
    '        while ( penarikan > saldo);\n' +
    '        return saldo;\n' +
    '        }\n' +
    '\n' +
    '    public static void kurangiSaldo(int paramSaldo){\n' +
    '        try {\n' +
    '            tanggal.add(date.toString());\n' +
    '            mutasi.add(paramSaldo);\n' +
    '            saldo = saldo - paramSaldo;\n' +
    '            String textSaldo = Integer.toString(saldo);\n' +
    '            FileWriter fileWriter = new FileWriter(fileSaldo);\n' +
    '            fileWriter.write(textSaldo);\n' +
    '            fileWriter.close();\n' +
    '\n' +
    '            FileWriter writerTanggal = new FileWriter(fileTanggal);\n' +
    '            String listTanggal =tanggal.toString();\n' +
    '            writerTanggal.write(listTanggal);\n' +
    '            writerTanggal.close();\n' +
    '\n' +
    '            FileWriter writerMutasi = new FileWriter(fileMutasi);\n' +
    '            String listMutasi =mutasi.toString();\n' +
    '            writerMutasi.write(listMutasi);\n' +
    '            writerMutasi.close();\n' +
    '        } catch (IOException e) {\n' +
    '            System.out.println("Terjadi kesalahan karena: " + e.getMessage());\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    \n' +
    '}\n' +
    '----------------------------------- SOURCE END -------------------------------------\n' +
    'null\n' +
    'java.lang.IllegalArgumentException\n' +
    '\tat org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)\n' +
    '\tat org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)\n' +
    '\tat org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)\n' +
    '\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)\n' +
    '\tat org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:221)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.access$1(BaseDocumentLifeCycleHandler.java:203)\n' +
    '\tat org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:100)\n' +
    '\tat org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)\n' +
    '\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)\n',
  level: 'info',
  timestamp: '2020-07-02 12:20:44.495'
}
